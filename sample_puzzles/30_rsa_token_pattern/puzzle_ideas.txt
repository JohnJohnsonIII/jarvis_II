PUZZLE IDEAS:

PART I =========================================================

# RSA tokens produce a sequence of pseudorandom six-digit numbers
#     that update every 60 seconds. 
# The six-digit numbers are used to help authenticate users that
#     log into systems, typically by requiring the user to supply
#     both a PIN and the six-digit number.
# On the screen, the numbers are broken into two groups of three
#     and might look something like the following:
#     * 247 456
#     * 765 294
#     * 232 543

# Interestingly, the six-digit numbers occasionally have patterns
#     such as the following:
#     * 123 321     - a palindrome if you consider all six numbers
#     * 121 454     - two mini palindromes, one in each group of three
#                     (they do not need to be identical)
#     * 123 679     - rising numbers (each subsequent number is equal to 
#                     or larger than the previous number)
#     * 654 321     - falling numbers (each subsequent number is
#                     equal to or smaller than the previous number)

# Given the values in the file rsa_token_values.txt:
#
# Count how many times each pattern occurs and identify the smallest and 
#     largest counts (ignore count of items that don't match any category).
#
# For example, given the following...

#     * 123 321     palindrome
#     * 247 456     no category
#     * 765 294     no category
#     * 123 679     rising
#     * 345 543     palindrome

# largest count is 2 (palindrome) and smallest count is 1 (rising), 
#     ignore the no category samples.


PART II =========================================================

# This problem is based on the same scenario, but the data is stored
#     in a json file: rsa_token_values_II.json 

# The json file contains a sequence of records
#     with four fields per record:
#     * uid: user id
#     * cat: category (1-5)
#     * score: confidence score (0 zero confidence - 10 high confidence)
#     * token: the RSA token value
# 
#     * The data will look like this:
#     [{uid: 0000, cat: 1, score: 4, token: '123 321'},
#      {uid: 0001, cat: 2, score: 5, token: '121 434'},
#      {blah, blah, blah},
#      {blah, blah, blah}]

# The objective is to read in the json and count each of the patterns.

# Count how many times each pattern occurs and identify the smallest and 
# largest counts (ignore count of items that don't match any category).




PART III =========================================================

# This problem is based on the same scenario and uses a similarly 
#     formatted json file: rsa_token_values_III.json

This time, we will do xxx...




PART IV =========================================================

# This problem is based on the same scenario and uses a similarly 
#     formatted json file: rsa_token_values_IV.json

This time, we will do xxx...


PART V =========================================================

# This problem is based on the same scenario and uses a similarly 
#     formatted json file: rsa_token_values_V.json

This time, we will do xxx...
